version: '3.4'

# This Compose file is expected to be used with the tanenbaum-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  op_log:


services:
  l1:
    build:
      context: .
      dockerfile: Dockerfile.l1
    image: l1:${TAG}
    stop_signal: SIGINT
    stop_grace_period: 30s
    ports:
      - "8545:8545"
      - "7060:6060"
    volumes:
      - "l1_data:/db/.syscoin"
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 192.168.9.45
  l2:
    build:
      context: .
      dockerfile: Dockerfile.l2
    image: l2:${TAG}
    stop_signal: SIGINT
    stop_grace_period: 30s
    ports:
      - "9545:8545"
      - "9546:8546"
      - "8060:6060"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.nebula/genesis.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"
    env_file:
      - ./envs/op-node.env

  op_stack_go_builder:  # Not an actual service, but builds the prerequisite go images
    build:
      context: ../
      dockerfile: ops/docker/op-stack-go/Dockerfile
      args:
        GIT_COMMIT: "dev"
        GIT_DATE: "0"
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    entrypoint: ["echo", "build complete"]

  op-node:
    depends_on:
      - op_stack_go_builder
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
    image: op-node:${TAG}
    stop_signal: SIGINT
    stop_grace_period: 30s
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:9551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --sys-poda-url=http://poda.tanenbaum.io/vh/
    ports:
      #      - "7545:8545"            # ? rpc ?
      - "9003:9003"             # public, p2p
      - "7300:7300"             # public, metrics ?
      #      - "6060:6060"            # ?
    volumes:
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.nebula/rollup.json:/rollup.json"
      - "${HOME}/${COMPOSE_PROJECT_NAME}-data/op_log:/op_log"
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 192.168.9.45
    env_file:
      - ./envs/op-node.env

  op-proposer:
    depends_on:
      - op_stack_go_builder
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
    image: op-proposer:${TAG}
    stop_signal: SIGINT
    stop_grace_period: 30s
    ports:
      - "6062:6060"
      - "7302:7300"
      - "6546:8545"
    env_file:
      - ./envs/op-node.env
    environment:
      OP_PROPOSER_L1_ETH_RPC: https://rpc.tanenbaum.io
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 10s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_GAME_FACTORY_ADDRESS: "${DGF_ADDRESS}"
      OP_PROPOSER_GAME_TYPE: "${DG_TYPE}"
      OP_PROPOSER_PROPOSAL_INTERVAL: "${PROPOSAL_INTERVAL}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"

  op-batcher:
    depends_on:
      - op_stack_go_builder
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
    image: op-batcher:${TAG}
    stop_signal: SIGINT
    stop_grace_period: 30s

    ports:
      - "6061:6060"
      - "7301:7300"
      - "6545:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: https://rpc.tanenbaum.io
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OP_BATCHER_MAX_L1_TX_SIZE_BYTES: 2097120
      OP_BATCHER_TARGET_L1_TX_SIZE_BYTES: 2000000
      OP_BATCHER_TARGET_NUM_FRAMES: 1
      OP_BATCHER_APPROX_COMPR_RATIO: 1.0
      OP_BATCHER_SUB_SAFETY_MARGIN: 6 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 10s
      OP_BATCHER_MAX_CHANNEL_DURATION: 24
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_LOG_TERMINAL: "true"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
      OP_BATCHER_BATCH_TYPE: 0
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 192.168.9.45
    env_file:
      - ./envs/op-node.env


  op-challenger:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-challenger/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-challenger:devnet
    environment:
      OP_CHALLENGER_L1_ETH_RPC: http://l1:8545
      # Note: this will need to be updated to point to a L1 consensus node when there is one in the devnet
      OP_CHALLENGER_L1_BEACON: "unset"
      OP_CHALLENGER_ROLLUP_RPC: http://op-node:8545
      OP_CHALLENGER_TRACE_TYPE: cannon
      OP_CHALLENGER_GAME_FACTORY_ADDRESS: ${DGF_ADDRESS}
      # The devnet can't set the absolute prestate output root because the contracts are deployed in L1 genesis
      # before the L2 genesis is known.
      OP_CHALLENGER_UNSAFE_ALLOW_INVALID_PRESTATE: true
      OP_CHALLENGER_DATADIR: temp/challenger-data
      OP_CHALLENGER_CANNON_ROLLUP_CONFIG: ./.devnet/rollup.json
      OP_CHALLENGER_CANNON_L2_GENESIS: ./.devnet/genesis-l2.json
      OP_CHALLENGER_CANNON_BIN: ./cannon/bin/cannon
      OP_CHALLENGER_CANNON_SERVER: ./op-program/bin/op-program
      OP_CHALLENGER_CANNON_PRESTATE: ./op-program/bin/prestate.json
      OP_CHALLENGER_CANNON_L2: http://l2:8545
      OP_CHALLENGER_MNEMONIC: test test test test test test test test test test test junk
      OP_CHALLENGER_HD_PATH: "m/44'/60'/0'/0/4"
      OP_CHALLENGER_NUM_CONFIRMATIONS: 1


  artifact-server:
    depends_on:
      - l1
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "${PWD}/../.devnet/:/usr/share/nginx/html/:ro"
    security_opt:
      - "no-new-privileges:true"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
