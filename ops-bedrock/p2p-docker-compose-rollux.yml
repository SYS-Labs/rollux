version: '3.4'

# This Compose file is expected to be used with the p2p-rollux-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  op_log:
  influxdb_data:
  grafana_data:
  grafana_dashboards:
  prometheus_data:


services:
  l1:
    build:
      context: .
      dockerfile: Dockerfile.l1
    stop_signal: SIGINT
    stop_grace_period: 30s
    ports:
      - "8545:8545"
      - "7060:6060"
    volumes:
      - "l1_data:/db/.syscoin"
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 192.168.9.45
  l2:
    build:
      context: .
      dockerfile: Dockerfile.l2
    stop_signal: SIGINT
    stop_grace_period: 30s
    ports:
      - "9545:8545"
      - "9546:8546"
      - "8060:6060"
      - "30303:30303"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.rollux/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
    entrypoint:  # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
      - "--authrpc.jwtsecret=/config/test-jwt-secret.txt"
    env_file:
      - ./envs/p2p-node-rollux.env

  op-node:
    depends_on:
      - l1
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
    stop_signal: SIGINT
    stop_grace_period: 30s
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:9551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.stopped
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.no-discovery=false
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.static=/ip4/<ip>/tcp/9003/p2p/<peer_ids>
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --heartbeat.enabled
      --heartbeat.moniker=sequencer
      --heartbeat.url=http://op-heartbeat:8080
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.rollux/rollup.json:/rollup.json"
      - op_log:/op_log
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 192.168.9.45

  op-heartbeat:
    build:
      context: ../
      dockerfile: ./op-heartbeat/Dockerfile
    environment:
      OP_HEARTBEAT_HTTP_ADDR: 0.0.0.0
      OP_HEARTBEAT_HTTP_PORT: 8080
    ports:
      - "8080:8080"

  op-exporter:
    build:
      context: ../
      dockerfile: ./op-exporter/Dockerfile
    ports:
      - "9100:9100"
    command: >
      --rpc.provider=https://rpc.rollux.com/
      --label.network=rollux
      --rollUpGasPrices.enable
      --gaseBaseFee.enable

  grafana:
    image: grafana/grafana:7.5.5
    env_file:
      - ./envs/metrics.env
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/:ro
      - grafana_data:/var/lib/grafana/
      - grafana_dashboards:/grafana-dashboards:ro

  influxdb:
    image: quay.io/influxdb/influxdb:1.6
    env_file:
      - ./envs/metrics.env
    volumes:
      - influxdb_data:/var/lib/influxdb

  prometheus:
    image: prom/prometheus
    env_file:
      - ./envs/metrics.env
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  dashboard-sync:
    image: python:3
    env_file:
      - ./envs/metrics.env
    command:
      - python
      - /scripts/dashboard-sync.py
    volumes:
      - ./docker/scripts/:/scripts
      - grafana_dashboards:/grafana-dashboards


networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
